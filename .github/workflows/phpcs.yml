# This is a basic workflow to help you get started with Actions

name: PHPCS

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  pull_request:
    branches: [ master, develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: PHPCS
    runs-on: ubuntu-18.04
    # The type of runner that the job will run on
    container: saucalinc/reviewdog-php

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Make Symlinks
      - name: Sniff
        run: |
          export REVIEWDOG_GITHUB_API_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          PHPCS_DIFF=$(mktemp)
          PHPCS_JSON=$(mktemp)
          GIT_DIFF=$(mktemp)
          phpcs --report-diff="${PHPCS_DIFF}" "${GITHUB_WORKSPACE}" || PHPCBF_EXIT_CODE=$?
          patch -p0 -ui "${PHPCS_DIFF}" || PATCH_EXIT_CODE=$?
          if [[ "${PATCH_EXIT_CODE}" -ne 0 ]]; then
            PATCHED_FILES=$(git status -s -uno | wc -l)
            if [[ "${PATCHED_FILES}" -ne 0 ]]; then
              git diff > "${GIT_DIFF}"

              reviewdog \
                -name="${INPUT_TOOL_NAME:-reviewdog-suggester}" \
                -f=diff \
                -f.diff.strip=1 \
                -reporter="github-pr-review" \
                -filter-mode="${INPUT_FILTER_MODE:-diff_context}" \
                -fail-on-error="${INPUT_FAIL_ON_ERROR:-true}" \
                -level="${INPUT_LEVEL:-warning}" < "${GIT_DIFF}" || REVIEWDOG_EXIT_CODE=$?
            fi
          fi
          phpcs --report-json="${PHPCS_JSON}" "${GITHUB_WORKSPACE}" || PHPCS_EXIT_CODE=$?

          cat "${PHPCS_JSON}" \
          | jq -r ' .files | to_entries[] | .key as $path | .value.messages[] as $msg | "{\"message\": \"`\($msg.source)`<br>\($msg.message)\", \"location\": {\"path\": \"\($path)\", \"range\": {\"start\": {\"line\": \($msg.line), \"column\": \($msg.column)}}}, \"severity\": \"ERROR\"}" '
          git stash -u && git stash drop
